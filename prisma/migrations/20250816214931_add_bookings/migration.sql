-- CreateEnum
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'BookingStatus') THEN
CREATE TYPE "public"."BookingStatus" AS ENUM ('CONFIRMED', 'CANCELLED');
END IF;
END$$;

-- CreateTable
CREATE TABLE IF NOT EXISTS "public"."Booking" (
      "id"                              INT             GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      "userId"                          INT             NOT NULL,
      "venueId"                         INT             NOT NULL,
      "startDate"                       timestamptz     NOT NULL,
      "endDate"                         timestamptz     NOT NULL,
      "totalPrice"                      NUMERIC(10,2)   NOT NULL,
      "status" "public"."BookingStatus"                 NOT NULL DEFAULT 'CONFIRMED',
      "createdAt"                       timestamptz     NOT NULL DEFAULT now(),

    -- Constraints
    CONSTRAINT "Booking_userId_fkey"
        FOREIGN KEY ("userId") REFERENCES public."User" ("id")
        ON DELETE RESTRICT ON UPDATE CASCADE,

    CONSTRAINT "Booking_venueId_fkey"
        FOREIGN KEY ("venueId") REFERENCES public."Venue" ("id")
        ON DELETE RESTRICT ON UPDATE CASCADE,

    -- Business validation
    CONSTRAINT "chk_booking_dates"
        CHECK ("endDate" > "startDate"),

    CONSTRAINT "chk_booking_price"
        CHECK ("totalPrice" > 0),

    CONSTRAINT "Booking_user_venue_dates_uq"
        UNIQUE ("userId","venueId","startDate","endDate")
);

-- Indexing
CREATE INDEX IF NOT EXISTS "Booking_userId_idx"
    ON public."Booking" ("userId");

CREATE INDEX IF NOT EXISTS "Booking_venueId_idx"
    ON public."Booking" ("venueId");

CREATE INDEX IF NOT EXISTS "Booking_venueId_startDate_idx"
    ON public."Booking" ("venueId", "startDate");