// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique @db.Citext
  name         String
  password     String
  phoneNumber  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  address      Address?
  hostedVenues Venue[]  @relation("VenueHost")

  @@index([createdAt])
}

model Address {
  userId    Int      @id
  street    String
  city      String
  country   String   @db.Char(2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model VenueAddress {
  id        Int      @id @default(autoincrement())
  street    String
  city      String
  country   String   @db.Char(2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  venue     Venue?
}

model Venue {
  id            Int           @id @default(autoincrement())
  title         String
  slug          String        @unique
  description   String
  pricePerNight Decimal       @db.Decimal(10, 2)
  capacity      Int
  latitude      Float?
  longitude     Float?
  address       VenueAddress? @relation(fields: [addressId], references: [id])
  addressId     Int?          @unique
  host          User          @relation("VenueHost", fields: [hostId], references: [id])
  hostId        Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([hostId])
  @@index([pricePerNight])
  @@index([capacity])
}
